#!/usr/bin/env fift -s

"TonUtil.fif" include

{
  ."Script for withdraw from contract" cr
  ."usage: "
  @' $0 type
  ." <withdraw-to-addr> <amount> <seqno> <contract-addr> [contract.pk]" cr
  1 halt
} : usage

@' $# 4 = @' $# 5 = or ' usage ifnot

$1 parse-smc-addr drop 2=: withdrawAddr
$2 $>GR =: amount
$3 parse-int =: seqno
$4 parse-smc-addr drop 2=: contractAddr

$# 5 = { 5 $() } { "contract.pk" } cond  =: pkFile
pkFile load-keypair swap drop =: privKey

."Withdraw query for contract " contractAddr .addr cr
."Seqno: " seqno . cr
."Withdraw " amount .GR ."to " withdrawAddr .addr cr

<b
  seqno 32 u,
  1 8 u, // withdraw method

  b{100} s, // addr_std$10 ?:Bool(0)
  withdrawAddr addr,
  amount Gram,
b> =: message
message hashu privKey ed25519_sign_uint =: signature

<b
  b{1000100} s,
  contractAddr addr,
  0 Gram,
  b{00} s,

  signature B,
  message ref,
b> =: externalMessage

externalMessage <s csr.

"withdraw-query.boc" =: bocFile

// flag 2 - add crc32-c
externalMessage 2 boc+>B
bocFile B>file

."New withdraw query saved to " bocFile type cr
